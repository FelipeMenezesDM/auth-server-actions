name: Deploy to GCP - DEV
on:
  workflow_call:
    secrets:
      GCP_CREDENTIALS_DEV:
        required: true
      GCP_PROJECT_ID_DEV:
        required: true
    inputs:
      service:
        type: string
        required: true
env:
  CREDENTIALS: ${{ secrets.GCP_CREDENTIALS_DEV }}
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID_DEV }}
  SERVICE: ${{ inputs.service }}-develop
  ENVIRONMENT: dev
jobs:
  validation:
    name: Validation
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform format check
        run: terraform fmt -check
      - name: Terraform init
        run: terraform init
      - name: Terraform Validate
        run: terraform validate -no-color
  deploy:
    needs: validation
    name: Deploy
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v3
      - name: Setup backend
        run: |
          cat > backend.tf << EOF
          terraform {
            backend "gcs" {
              bucket  = "${{ env.PROJECT_ID }}-state-files"
              prefix  = "${{ env.SERVICE }}"
            }
          }
          EOF
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
      - name: Terraform init
        run: terraform init
        env:
          GOOGLE_CREDENTIALS: ${{ env.CREDENTIALS }}
      - name: Terraform plan
        run: terraform plan -var-file="./environments/${{ env.ENVIRONMENT }}/terraform.tfvars"
        env:
          GOOGLE_CREDENTIALS: ${{ env.CREDENTIALS }}
      - name: Terraform apply
        run: terraform apply -auto-approve -var-file="./environments/${{ env.ENVIRONMENT }}/terraform.tfvars"
        env:
          GOOGLE_CREDENTIALS: ${{ env.CREDENTIALS }}